#!/usr/bin/env bash

set -eo pipefail

# populate mvn cache for extract tests
clojure -Sdeps '{:deps {org.clojure/clojure {:mvn/version "1.9.0"}}}' -Spath > /dev/null
clojure -Sdeps '{:deps {org.clojure/clojure {:mvn/version "1.10.2"}}}' -Spath > /dev/null
clojure -Sdeps '{:deps {org.clojure/clojurescript {:mvn/version "1.10.773"}}}' -Spath > /dev/null

if [ "$CLJ_KONDO_TEST_ENV" = "native" ]; then
    clojure -M:test
else
    echo "Testing with Clojure 1.9.0"
    clojure -Sforce -M:clojure-1.9.0:test
    lein with-profiles +clojure-1.9.0 "do" clean, test

    echo "Testing with Clojure 1.10.2"
    clojure -Sforce -M:clojure-1.10.2:test
    lein with-profiles +clojure-1.10.2 "do" clean, test
fi

rm -rf /tmp/kondo-test-analysis
mkdir -p /tmp/kondo-test-analysis
clojure -M:clj-kondo --config '{:output {:analysis {:locals true :keywords true :arglists true} :format :edn}}' --lint "$(clojure -Spath -A:cljs)" > /tmp/kondo-test-analysis/out.edn

clojure -M -e '(do (require (quote [clojure.edn :as edn])) (edn/read-string (slurp "/tmp/kondo-test-analysis/out.edn")) nil)'

clojure -A:test:pod-test -d pod-test
